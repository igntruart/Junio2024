name: Pipeline examen
on:
  push:
  workflow_dispatch:
jobs:
  Build:
    runs-on: ubuntu-latest
    env:
      GITHUB_LOGIN: ${{ github.actor }}
      GITHUB_PACKAGES: ${{ secrets.GITHUB_TOKEN }}
      GITHUB_OAUTH: ${{ secrets.GITHUB_TOKEN }}
    steps:
      - name: Clonando el repositorio y estableciendo el espacio de trabajo
        uses: actions/checkout@v3
      - name: Configurando java
        uses: actions/setup-java@v3
        with:
          distribution: 'temurin'
          java-version: '17'
      - name: Construyendo y probando el código
        run: |
          chmod +x gradlew        
          ./gradlew jar
      - run: echo "El desarrollador ${{ github.actor }} está añadiendo una nueva versión"
  Test:
    runs-on: ubuntu-latest
    needs: Build
    steps:
      - name: Clonando el repositorio y estableciendo el espacio de trabajo
        uses: actions/checkout@v3
      - name: Configurando java
        uses: actions/setup-java@v3
        with:
          distribution: 'temurin'
          java-version: '17'
      - name: Ejecutando los test
        run: |
          chmod +x gradlew        
          ./gradlew test
      - run: echo "El desarrollador ${{ github.actor }} está añadiendo una nueva versión"
  Publish:
    runs-on: ubuntu-latest
    needs: Test
    env:
      GITHUB_LOGIN: ${{ github.actor }}
      GITHUB_PACKAGES: ${{ secrets.GH_TOKEN }}
      GITHUB_OAUTH: ${{ secrets.GH_TOKEN }}
    steps:
      - run: echo "El desarrollador ${{ github.actor }} está añadiendo una nueva versión"
      - name: Clonando el repositorio y estableciendo el espacio de trabajo
        uses: actions/checkout@v3
      - name: Configurando java
        uses: actions/setup-java@v3
        with:
          distribution: 'temurin'
          java-version: '17'
      - name: Publicando el artefacto
        run: |
          chmod +x gradlew        
          ./gradlew publish
      - run: echo "El desarrollador ${{ github.actor }} está añadiendo una nueva versión"
 